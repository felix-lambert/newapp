{
  "name": "database-cleaner",
  "description": "Database Cleaner for node.js",
  "keywords": [
    "database",
    "cleaner",
    "mongodb",
    "redis",
    "couchdb",
    "tests",
    "package.json"
  ],
  "version": "0.10.0",
  "author": {
    "name": "Emerson Macedo",
    "email": "emerleite@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/emerleite/node-database-cleaner.git"
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "1.21.4",
    "should": "4.0.4",
    "mongodb": "1.4.18",
    "redis": "0.12.1",
    "cradle": "0.5.8",
    "mysql": "2.5.1",
    "pg": "3.4.2"
  },
  "main": "index",
  "scripts": {
    "test": "node_modules/mocha/bin/mocha -R spec --globals config,currentObjectStored"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "readme": "[![Build Status](https://secure.travis-ci.org/emerleite/node-database-cleaner.png)](http://travis-ci.org/emerleite/node-database-cleaner)\n\nNode.js Database Cleaner\n========================\nThe simplest way to clean your database. \n\nSay you're doing test cases. How can you clean up your data after each\ntest run? With Database Cleaner you can simply do it with one line of code.\n\nSupported Databases\n-------------------\n* MongoDB\n* Redis\n* CouchDB\n* MySQL\n* Postgres\n\nDependencies\n------------\n\n### Runtime\n* Node 0.8.x+\n* node-mongodb-native (a.k.a mongodb)\n* redis\n* cradle for couchdb (<http://cloudhead.io/cradle>)\n* mysql server\n* postgres server\n\n### Development/Tests\n* mocha\n* should\n* hredis\n* redis\n* cradle\n* mysql\n* pg\n\nInstalation\n-----------\n```shell\n$ npm install database-cleaner\n```\n\nUsage\n------\n```javascript\nvar DatabaseCleaner = require('database-cleaner');\nvar databaseCleaner = new DatabaseCleaner(type); //type = 'mongodb|redis|couchdb'\n\ndatabaseCleaner.clean(database, callback);\n```\n\n### Examples\nTake look at test folder to see how it works.\n\nLook at examples dir.\n\nRunning tests\n-------------\nThere is some ways to run tests:\n\n```shell\n$ mocha test # you need mocha globaly installed. `npm install -g mocha`\n$ npm test\n```\n\nFor tests you need each database running (mongodb, redis, couchdb, mysql)\nOr run once. Ex: `mocha test/redis.test.js`\n\nYou can also run tests using local mocha. ./node_modules/mocha/bin/mocha\n\nMySQL\n-----\n\nTo run mysql tests you need to have a database_cleaner database.\n\n```\nmysql -u root -e 'create database database_cleaner;'\n```\n\nPostgres\n--------\n\nTo run postgres tests you need to have a database_cleaner database.\n\n```\ncreatedb database_cleaner\n```\n\nTo-Do\n-----\n* see (<https://github.com/emerleite/node-database-cleaner/issues>)\n\nAuthor\n------\n\n* Emerson Macedo (<http://codificando.com/> and <http://nodecasts.org>)\n\nLicense:\n--------\n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/emerleite/node-database-cleaner/issues"
  },
  "_id": "database-cleaner@0.10.0",
  "dist": {
    "shasum": "72cbe62bc7108901aeaba927e0b4e6a935652983"
  },
  "_from": "database-cleaner@",
  "_resolved": "https://registry.npmjs.org/database-cleaner/-/database-cleaner-0.10.0.tgz"
}
